 # this is a yml file. working in yml file

# informatie desper comenzi: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow

name: Build and Deploy code

on: [push, pull_request] # this trigger the workflow



# creating a job
jobs: 
    job1:
      # inserez secret environment-ul din github
        environment:
          name: Testing
      # setup the environment variable/ if i insertiti here is only for the job 1, if i inserted abive the jobs - it will affetc all the jobs
        env:
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} # inserat repositoriul secret
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

          # Creating PostgreSQL service containers: connectig the test wirh PgAdmin:
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
              POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
            ports:
              - 5432:5432
          # Set health checks to wait until postgres has started/ link: https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

        # specifying the os for the virtual machine to run the ci/cd
        runs-on: windows-2022
        # providibg the list of steps
        steps:
            #giving a name and a comand for every step/ toata informatia asta e si pe linkul mentionat mai sus/ sa verifi ce inseamna un job, un step si cum functioneaza
            - name: pulling git repo
            # teh actually comand that need to run in the machine to pull the commande above
              uses: actions/checkout@v2  # aceasta e din codul exemplu de pe github
#dupa ce am scris comenzile de sus ca sa commit toate am scris in terminal: 1.git add --all; 2.git commit -m "adding first github action"; 3.git push (origin main - e optional).
# dupa ce scris comenzile ontru pe repositoriul din github + Action + ai o sa imi apara primul action
# https://github.com/marketplace?ocid=AIDcmm153qff2f_SEM__k_d615bd7e8cc21d2061dadb3afa4709d0_k_  - am setat python de pe acest link 
            - name: install python version 3.11
              uses: actions/setup-python@v2
              with:
                python-version: '3.11'
                # updating the pip
            - name: update pip
              run: python -m pip install --upgrade pip
              # install all the dependencie, and packages from requirements.txt
            - name: install all dependencies
              run: pip install -r requirements.txt
#dupa ce am scris comenzile de sus ca sa commit toate am scris in terminal: 1.git add --all; 2.git commit -m "adding first github action"; 3.git push
 # dupa verific iarasi github + Actions

 # run pytest
            - name: test with pytest
              run: 
                pip install pytest
                pytest

            - name: say hi to svetlana
              run: print "hello svetlana"
