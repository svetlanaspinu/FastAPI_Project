 # this is a yml file. working in yml file

# informatie desper comenzi: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow

name: Build and Deploy code

on: [push, pull_request] # this trigger the workflow


   ## Staring the CI - Continous Integration
# creating a job
jobs: 
    build:
      # inserez secret environment-ul din github
        environment:
          name: Testing
      # setup the environment variable/ if i insertiti here is only for the job 1, if i inserted abive the jobs - it will affetc all the jobs
        env:
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} # inserat repositoriul secret
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}


        # specifying the os for the virtual machine to run the ci/cd
        runs-on: windows-2022
        # providibg the list of steps
        steps:
            #giving a name and a comand for every step/ toata informatia asta e si pe linkul mentionat mai sus/ sa verifi ce inseamna un job, un step si cum functioneaza
            - name: pulling git repo
            # teh actually comand that need to run in the machine to pull the commande above
              uses: actions/checkout@v2  # aceasta e din codul exemplu de pe github
#dupa ce am scris comenzile de sus ca sa commit toate am scris in terminal: 1.git add --all; 2.git commit -m "adding first github action"; 3.git push (origin main - e optional).
# dupa ce scris comenzile ontru pe repositoriul din github + Action + ai o sa imi apara primul action
# https://github.com/marketplace?ocid=AIDcmm153qff2f_SEM__k_d615bd7e8cc21d2061dadb3afa4709d0_k_  - am setat python de pe acest link 
            - name: install python version 3.11
              uses: actions/setup-python@v2
              with:
                python-version: '3.11'
                # updating the pip
            - name: update pip
              run: python -m pip install --upgrade pip
              # install all the dependencie, and packages from requirements.txt
            - name: install all dependencies
              run: pip install -r requirements.txt
#dupa ce am scris comenzile de sus ca sa commit toate am scris in terminal: 1.git add --all; 2.git commit -m "adding first github action"; 3.git push
 # dupa verific iarasi github + Actions

 # run pytest
            - name: test with pytest
              run: 
                pip install pytest
                pytest

            - name: say hi to svetlana
              run: print "hello svetlana"
      ## End the CI - Continous Integration

       ## Staring the CD - Continous Delivery

# job name
    deploy:
      runs-on: windows-2022
  # ci/cd run in parallel/ using needs - to say to cd to wait for ci to run first/ in [] - este notat job din CI
      needs: [build]
      # dupa ce am creat secret environments in github cu apei key si email personal
      environment: 
        name: production_heroku
      steps:
        - name: pulling git repo
          uses: actions/checkout@v2
        - name: deploiyng to Heroku
        # link: https://github.com/marketplace/actions/deploy-to-heroku
          uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
            heroku_email: ${{secrets.HEROKU_EMAIL}}
# dupa aceasta iarasi run the commands pt a connecta cu github

# Pushing updates to Heroku: acesta ar fi pasii de facut manual dar se poate de utilizat an built-in action de pe github marketplace/ este ceea ce am facut sus.
# link: https://github.com/marketplace/actions/deploy-to-heroku
  # 1st step: pull our github repo
  # 2nd step: install heroku CLI
  # 3rd step: heroku login
  # 4th step: add git remote for heroku
  # 5ht step: git push heroku main


      